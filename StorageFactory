// SPDX-License-Identifier: MIT

pragma solidity ^0.8.18;

import {SimpleStorage, SimpleStorage2} from "./SimpleStorage.sol";

contract StrogeFactoy{
   //uint256 public favoriteNumber
   //type visibility name

    SimpleStorage[] public listOfSimpleStorageContracts;

   
    function createSipleStorageContract() public {
        // How does the storage factory know what simple storage looks likes?
        SimpleStorage newSimpleStorageContract = new SimpleStorage();
        listOfSimpleStorageContracts.push(newSimpleStorageContract);
    }

    function sfStore(uint256 _simpleStorageIndex, uint256 _newSimpleStorageNumber) public {
        // Address
        //ABI - Application Binary Interface (tecnically a liie, you just need the functionselector)
        listOfSimpleStorageContracts [_simpleStorageIndex].store(_newSimpleStorageNumber);
    }

    function sfGet(uint256 _simpleStorageIndex) public view returns (uint256) {
        return listOfSimpleStorageContracts[_simpleStorageIndex].retrieve();
    }

}
